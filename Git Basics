staging area:
    files that have been 'git add'.
    git add will add the exact versions of the files to staging area. but if you modify things after but before commit, you will need to run git add again.

git status will show both staged and unstange files.
git diff will only show the exact difference between staged and unstaged files.
git diff --staged will show the difference between staged files and last commit.
(- followed by a character, -- usually followed by multiple chararacters)


git commit -a <- skip git add (run git add automatically)

git rm   will remove a file from the FS, and also from git.
git rm --cached    will not remove a file from FS, but not track them anymore. (in case u dont want to modify ignore file)

git log  <-  you can specify a range   
-2 last 2 commits 
-p show details (p : patch)


Undoing things:
    Head always points to the most recent commit of the current branch.
    
    undo last commit:
    git revert {hashcode}  or git revert head~1  (revert second most recent commit)  revert a commit.
    

    undo staged changes:
    git reset Head   or Git reset Head {file}  : undo all staged file(s).   (reset to the version of Head). 
    
    undo unstage changes:
    git checkout {file}     : discard the file in the disk and you cant retrieve it back.
    
    modify last commit:
    git commit --amend      : change last commit. use the current staged version to override it.

Working with remotes:
    git remote -v
    can show all remote urls.
    if the repo is set up by git clone, then origin will be the remote branch you cloned from.
    git push origin master (pushed master to origin)  (git push remotename branchname)


Tag: for important commit(e.g. release) you may want to add a tag:
Two types of tag:
    annotated tags: contains more info. like tagger's email, can it can be signed.
    Lightweight tags: like a pointer to a specific branch.

